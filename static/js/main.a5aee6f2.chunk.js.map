{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Pweet.js","components/PweetFactory.js","routes/Home.js","components/Navigation.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","authService","auth","firebaseInstance","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Pweet","pweetObj","isOwner","editing","setEditing","text","newPweet","setNewPweet","onDeleteClick","window","confirm","doc","id","delete","attachmentURL","refFromURL","toggleEditing","update","autoFocus","src","attachmentUrl","faTrash","faPencilAlt","PweetFactory","userObj","pweet","setPweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","pweets","setPweets","useEffect","orderBy","onSnapshot","snapshot","pweetArray","docs","map","marginTop","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","displayName","refreshUser","history","useHistory","newDisplayName","setNewDisplayName","updateProfile","getMyPweets","where","get","signOut","push","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","Profile","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","getFullYear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a5aee6f2.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\" ;\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n    appId: process.env.REACT_APP_APP_ID,\r\n  };\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const authService = firebase.auth();\r\n\r\nexport const firebaseInstance = firebase;\r\n\r\nexport const dbService = firebase.firestore();\r\n\r\nexport const storageService = firebase.storage();","import React , { useState }from \"react\";\r\nimport { authService } from \"fbase\";\r\n\r\nconst AuthForm = () =>{\r\n\r\n    const [email,setEmail] = useState(\"\");\r\n    const [password,setPassword] = useState(\"\");\r\n    const [newAccount,setNewAccount] = useState(true);\r\n    const [error,  setError] = useState(\"\");\r\n    \r\n    const onChange=(event)=>{\r\n        const {\r\n            target: {name, value },\r\n        } = event;\r\n        if(name === \"email\"){\r\n            setEmail(value);\r\n        } else if (name === \"password\"){\r\n            setPassword(value);\r\n        }\r\n    }\r\n    \r\n    const onSubmit = async (event) =>{\r\n        event.preventDefault();\r\n        try {\r\n            let data;\r\n            if(newAccount){\r\n                //create Account\r\n             data = await authService.createUserWithEmailAndPassword(\r\n                    email , password);\r\n            } else {\r\n                // Login\r\n             data =  await authService.signInWithEmailAndPassword(\r\n                    email, password);\r\n            }\r\n            console.log(data)\r\n        }   catch(error){\r\n            setError(error.message)\r\n        }\r\n    }\r\n\r\n    const toggleAccount = () => setNewAccount(prev => !prev)\r\n\r\n    return(<>\r\n        <form onSubmit={onSubmit} className=\"container\"> \r\n            <input \r\n            name = \"email\" \r\n            type = \"email\" \r\n            placeholder=\"Email\" \r\n            required \r\n            value={email}\r\n            onChange={onChange} \r\n            className=\"authInput\"\r\n            />\r\n\r\n            <input \r\n            name =\"password\" \r\n            type = \"password\" \r\n            placeholder=\"Password\" \r\n            required \r\n            value={password} \r\n            onChange={onChange}\r\n            className=\"authInput\"\r\n             />\r\n\r\n            <input type = \"submit\" \r\n            className =\"authInput authSubmit\"\r\n            value= {newAccount ? \"Create Account\" : \"Log In\"} \r\n            />\r\n\r\n            {error && <span className=\"authError\">{error}</span>}\r\n        </form>\r\n        <span onClick={toggleAccount} className=\"authSwitch\"> \r\n            {newAccount ? \"Sign In\" : \"Create Account\"}\r\n        </span>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AuthForm;","import { authService, firebaseInstance } from \"fbase\";\r\nimport React from \"react\";\r\nimport AuthForm from \"components/AuthForm\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {faTwitter,\r\n    faGoogle,\r\n    faGithub,} from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nconst Auth =  () => {\r\n    const onSocialClick = async (event) => {\r\n        const { target : {name},\r\n    } = event; //es6 . 들어보기.\r\n    let provider;\r\n    if(name === \"google\"){\r\n        provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n    }else if(name === \"github\"){\r\n        provider = new firebaseInstance.auth.GithubAuthProvider();\r\n    }\r\n    await authService.signInWithPopup(provider);\r\n    }\r\n\r\n    return (\r\n    <div className=\"authContainer\">\r\n        <FontAwesomeIcon\r\n        icon={faTwitter}\r\n        color={\"#04AAFF\"}\r\n        size=\"3x\"\r\n        style={{ marginBottom: 30 }}\r\n      />\r\n        <AuthForm />\r\n        <div className=\"authBtns\">\r\n            <button onClick ={onSocialClick} name =\"google\" className=\"authBtns\">Continue With Google <FontAwesomeIcon icon={faGoogle} /></button>\r\n            <button onClick ={onSocialClick} name =\"github\" className=\"authBtn\">Continue With Github <FontAwesomeIcon icon={faGithub} /></button>   \r\n        </div>\r\n    </div>\r\n        )\r\n}\r\n\r\nexport default Auth; //이 형식이 자동으로 import됨.","import { dbService, storageService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Pweet = ({pweetObj, isOwner}) => {\r\n\r\n    const [editing, setEditing] = useState(false);\r\n    //editing 모드인가 아닌가\r\n    const [newPweet, setNewPweet] = useState(pweetObj.text);\r\n    //text update.(input 을 update)\r\n\r\n    const onDeleteClick = async () => {\r\n        const ok = window.confirm(\"해당 pweet을 삭제하시겠습니까?\");\r\n        if(ok){\r\n           await dbService.doc(`pweets/${pweetObj.id}`).delete();\r\n           if(pweetObj.attachmentURL !==\"\" ){await storageService.refFromURL(pweetObj.attachmentURL).delete();\r\n        }}\r\n    };\r\n\r\n    const toggleEditing = () => setEditing(prev => !prev)\r\n\r\n    const onSubmit = async (event) =>{\r\n        event.preventDefault();\r\n        await dbService.doc(`pweets/${pweetObj.id}`).update({\r\n            text: newPweet,\r\n        });\r\n        setEditing(false);\r\n    }\r\n\r\n    const onChange=(event) =>{\r\n        const {target:{value},}=event;\r\n        setNewPweet(value);\r\n    }\r\n\r\n    return (\r\n        <div className=\"pweet\">\r\n            {\r\n            editing ? (<>\r\n            {isOwner && (<>\r\n            <form onClick={onSubmit} className=\"container pweetEdit\">\r\n                <input \r\n                type=\"text\" \r\n                placeholder=\"Edit U R Pweet.\"\r\n                value={newPweet} \r\n                required\r\n                autoFocus\r\n                onChange={onChange}\r\n                className=\"formInput\"\r\n                />\r\n                <input type=\"submit\" value=\"update Pweet\" className=\"formBtn\"/>\r\n            </form>\r\n            <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n            Cancel\r\n          </span>\r\n            </>)}\r\n            </>)\r\n            :(<>\r\n            <h4>{pweetObj.text} </h4>\r\n            {pweetObj.attachmentURL && <img src={pweetObj.attachmentUrl} />}\r\n            {isOwner && (<>\r\n            <div className=\"pweet_actions\">\r\n            <span onClick={onDeleteClick}>\r\n                <FontAwesomeIcon icon={faTrash} />\r\n                </span>\r\n              <span onClick={toggleEditing}>\r\n                <FontAwesomeIcon icon={faPencilAlt} />\r\n              </span>\r\n            </div>\r\n                </>)\r\n            }</>)\r\n        }\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default Pweet;","import React, { useState } from \"react\";\r\nimport { storageService,dbService } from \"fbase\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst PweetFactory = ({userObj}) => {\r\n    const [pweet,setPweet] = useState(\"\");\r\n    //form을 위한 state.\r\n    const [attachment, setAttachment] = useState(\"\");\r\n \r\n    const onSubmit = async (event) => {\r\n        if(pweet === \"\"){\r\n            return;\r\n        }\r\n        event.preventDefault();\r\n        let attachmentURL =\"\";\r\n        if (attachment !== \"\"){\r\n            const attachmentRef = storageService\r\n            .ref()\r\n            .child(`${ userObj.uid}/${uuidv4()}`);\r\n        //child에서 컬렉션 생성(dir)\r\n        const response = await attachmentRef.putString(attachment, \"data_url\")\r\n        attachmentURL = await response.ref.getDownloadURL();\r\n        } //attachmentURL 같은게 lexical scope(정적범위,어휘범위)라고 함.\r\n        // if문에 attachmentURL이 정의되어있으나, 명령은 if문 안에 없음.\r\n        const pweetObj = {\r\n            text:pweet,\r\n            createdAt: Date.now(),\r\n            creatorId:userObj.uid,\r\n            attachmentURL,\r\n        };\r\n        \r\n       await dbService.collection(\"pweets\").add(pweetObj);\r\n        setPweet(\"\");\r\n        setAttachment(\"\");\r\n    }\r\n\r\n    const  onChange = (event) =>{\r\n        const { target : {value}} = event;\r\n        setPweet(value);\r\n    }\r\n\r\n    const onFileChange=(event)=>{\r\n        const {\r\n            target : {files},\r\n        } = event;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend=(finishedEvent) => {\r\n            const { currentTarget: { result } } = finishedEvent;\r\n            setAttachment(result)\r\n        }\r\n        reader.readAsDataURL(theFile);\r\n    }\r\n\r\n    const onClearAttachment = () => setAttachment(\"\") \r\n\r\n    return (\r\n        <form onSubmit={onSubmit} className=\"factoryForm\">\r\n            <div className=\"factoryInput__container\">\r\n                <input \r\n                className=\"factory__input\"\r\n                value={pweet} \r\n                onChange={onChange} \r\n                type=\"text\" \r\n                placeholder=\"What's on UR Mind?\" \r\n                maxLength={140} />\r\n                <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\"/>\r\n                </div>\r\n                <label for=\"attach_file\" className=\"facttoryInput__label\">\r\n                <span>Add photos</span>\r\n        <FontAwesomeIcon icon={faPlus} />\r\n                </label>\r\n                <input id=\"attach-file\"\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                onChange={onFileChange}\r\n                style={{\r\n                  opacity: 0,\r\n                 }}\r\n                />\r\n                {attachment && (\r\n                    <div className=\"factoryForm__attachment\">\r\n                    <img src={attachment} \r\n                    style={{backgroundImage: attachment,}}\r\n                    />\r\n                    <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n                    <span>Remove</span>\r\n                    <FontAwesomeIcon icon={faTimes} />\r\n                    </div>\r\n                </div>)}\r\n            </form>\r\n    )\r\n}\r\n\r\nexport default  PweetFactory;","import React, { useEffect, useState } from \"react\";\r\nimport Pweet from \"components/Pweet\";\r\nimport { dbService } from \"fbase\";\r\nimport PweetFactory from \"components/PweetFactory\";\r\n\r\n\r\n// export default () => <span>Home</span> //이렇게 하면 자동import안됨.\r\n\r\nconst Home = ({ userObj }) => {\r\n//userObj = pweet all data\r\n    const [pweets,setPweets] = useState([]);\r\n//리 랜더를 하지 않기 때문에 구식방법보다 이게 훨씬 나음.\r\n\r\n    useEffect(()=>{\r\n        dbService\r\n        .collection(\"pweets\") //컬렉션에 어떤 이름으로 저장할것인가?\r\n        .orderBy(\"createdAt\",\"asc\")\r\n        .onSnapshot((snapshot) => {\r\n            const pweetArray = snapshot.docs.map(doc=>({\r\n                id:doc.id,\r\n                ...doc.data(),\r\n            })//asc - 올림차순 desc - 내림차순\r\n            )\r\n            setPweets(pweetArray);\r\n        })\r\n    },[])\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <PweetFactory userObj={userObj} />\r\n            <div style={{ marginTop: 30 }}>\r\n                {pweets.map((pweet)=>(\r\n                    <Pweet\r\n                    key={pweet.id} \r\n                    pweetObj={pweet}\r\n                    isOwner={pweet.creatorId === userObj.uid}\r\n                    />//isOwner 다이나믹한 props 어쩔때는 true / false..\r\n                ))}\r\n            </div>\r\n        </div>  \r\n    )\r\n}\r\n\r\nexport default Home;","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({userObj}) =>\r\n<nav>\r\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n        <li> \r\n            <Link to=\"/\" style={{ marginRight: 10 }}>\r\n          <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n        </Link>\r\n        </li>\r\n    </ul>\r\n    <ul>\r\n        <li>\r\n        <Link\r\n          to=\"/profile\"\r\n          style={{\r\n            marginLeft: 10,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            fontSize: 12,\r\n          }}\r\n        >\r\n          <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n          <span style={{ marginTop: 10 }}>\r\n            {userObj.displayName\r\n              ? `${userObj.displayName}의 Profile`\r\n              : \"Profile\"}\r\n          </span>\r\n        </Link>\r\n        </li>\r\n    </ul>\r\n     </nav>\r\n\r\nexport default Navigation;","import { authService, dbService } from \"fbase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default ({refreshUser, userObj}) => {\r\n    const history = useHistory();\r\n    const [newDisplayName , setNewDisplayName] = useState(userObj.displayName);\r\n    \r\n    const onLogOutClick = () => {\r\n        authService.signOut();\r\n        history.push(\"/\");\r\n    };\r\n\r\n    const onChange = (event) => {\r\n        const { \r\n            target : {value},\r\n        } = event;\r\n        setNewDisplayName(value);\r\n    }\r\n\r\n    const onSubmit = async (event) =>  {\r\n        event.preventDefault();\r\n        if(userObj.displayName !== newDisplayName ){\r\n            //displaneName update!\r\n             await userObj.updateProfile({\r\n                displayName : newDisplayName,\r\n            // photoURL:\"\" 이거는 숙제..\r\n            });\r\n            refreshUser(); //react.js에 있는 프로파일을 리프레시 시킬것임.\r\n        }\r\n        // 치명적인(?) 문제 :  업데이트 프로필 누르면 새로고침을 해야 내 프로필이 업데이트 된것을 볼수가 있음.\r\n    }\r\n    \r\n    const getMyPweets = async () => {\r\n        const pweets = await dbService\r\n        .collection(\"pweets\")\r\n        .where(\"creatorId\", \"==\", userObj.uid)\r\n        .orderBy(\"creatorAt\")\r\n        .get();\r\n\r\n        console.log(pweets.docs.map(doc => doc.data()))\r\n    }\r\n    //where은 필터링 하는 법을 알려줌.\r\n\r\n    useEffect(() => {\r\n        getMyPweets();\r\n    },[] )\r\n\r\n    return (\r\n    <div className=\"container\">\r\n    <form onSubmit={onSubmit} className=\"profileForm\">\r\n        <input \r\n        onChange={onChange}\r\n        type=\"text\" \r\n        autoFocus\r\n        placeholder=\"Display Name \"\r\n        value={newDisplayName}\r\n        className=\"formInput\"\r\n        />\r\n        <input type=\"submit\"\r\n        value=\"Update Profile\"\r\n        className=\"formBtn\"\r\n        style={{\r\n            marginTop: 10,\r\n          }}\r\n        />\r\n    </form>\r\n    <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n        Log Out\r\n      </span>\r\n    </div>\r\n    )\r\n}","import React from \"react\";\r\nimport {HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Navigation from \"components/Navigation\";\r\nimport Profile from \"routes/Profile\";\r\n\r\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\r\n\r\n    return (\r\n        <Router>\r\n            {isLoggedIn && <Navigation userObj={userObj} />}\r\n            <Switch>\r\n            {isLoggedIn ? (\r\n            <div style={{\r\n                maxWidth: 890,\r\n                width: \"100%\",\r\n                margin: \"0 auto\",\r\n                marginTop: 80,\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n              }}>\r\n            <Route exact path=\"/\" >\r\n                <Home userObj={userObj} />\r\n            </Route> \r\n            <Route exact path=\"/profile\" >\r\n                <Profile userObj={userObj} \r\n                refreshUser={refreshUser} />\r\n            </Route> \r\n            </div>\r\n            ) : (\r\n                <>\r\n            <Route exact path=\"/\">\r\n                <Auth />\r\n            </Route>\r\n            </>\r\n            )}\r\n            </Switch>\r\n        </Router>\r\n    )\r\n}\r\n//fragment 부모요소가 없는데 많은 요소들을 render 하고 싶을 떄 사용함.\r\n//div나 span이고 뭐고넣기 싫을 떄 사용.\r\n\r\nexport default AppRouter;\r\n","import React,{ useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n\n/*function App() {\n  const [init, setInit] = useState(false);\n  const [isLoggedIn, setIsLoggedIn ] = useState(false);\n  const [userObj, setUserObj ] = useState(null);\n\n  useEffect( () => {\n    authService.onAuthStateChanged((user) => {\n      if(user){\n        setIsLoggedIn(true);\n        setUserObj(user);\n      } else {\n        setIsLoggedIn(false);\n      }\n       setInit(true);\n    });\n  },[]) \n  return (\n    <>\n    {init? <AppRouter isLoggedIn={ isLoggedIn }  userObj={ userObj } /> : \"Initializing...\"}\n    <footer>&copy; {new Date().getFullYear()} Pwitter</footer>\n    </>\n  )\n}\n//아래처럼 간단하게 가능.\n*/\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj ] = useState(null);\n\n  useEffect( () => {\n    authService.onAuthStateChanged((user) => {\n      if(user){\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args)\n        });\n        /*if(user.displayName === null ){\n          user.updateProfile({\n            displayName:\"Pwitter\",\n          });\n        }*/\n      } else {setUserObj(null);}\n      setInit(true);\n    });\n  },[])\n\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args)\n    })\n  }\n\n  return (\n    <>\n    {init? <AppRouter \n      refreshUser={refreshUser} \n      isLoggedIn={ Boolean(userObj) }  \n      userObj={ userObj } /> : \"Initializing...\"}\n    <footer>&copy; {new Date().getFullYear()} Pwitter</footer>\n    </>\n  )\n\n    }\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport \"./styles.css\";\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}